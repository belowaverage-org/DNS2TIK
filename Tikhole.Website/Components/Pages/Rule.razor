@page "/Rules/{Index:int}"
@inject NavigationManager NavigationManager
@using global::Tikhole.Engine

<PageTitle>📃 Rule: @ERule?.Name</PageTitle>

    @if (Error != "")
{
    <div class="toast show position-fixed bottom-0 end-0 m-3">
        <div class="toast-header">
            <strong class="me-auto">⚠️ Error</strong>
        </div>
        <div class="toast-body">
            @Error
        </div>
    </div>
}

<h1>📃 Rule: @ERule?.Name</h1>
<p class="text-secondary">
    <small>@ERule?.GetType().GetRuleName()</small>
</p>
<hr />
<a href="/Rules" class="btn btn-dark">⬅️ Back</a>
    @if (ERule != null)
    {
        @if (DeleteIntent)
        {
            <button class="btn btn-dark float-end" @onclick="InvokeDelete">⚠️ Confirm?</button>
        }
        else
        {
            <button class="btn btn-dark float-end" @onclick="InvokeDelete">🗑️ Delete</button>
        }
    }
<hr />
<div style="max-width:500px;">
    @if (ERule == null)
    {
        foreach (Type rule in System.Reflection.Assembly.GetAssembly(typeof(Engine.Tikhole)).GetTypes())
        {
            var asdf = rule.GetFields();
            <button class="btn btn-dark" @onclick="() => {}">@rule.GetRuleName()</button>
        }
    }
    else
    {
        <div class="mb-3">
            <label class="form-label">Name</label>
            <InputText @bind-Value="ERule!.Name" class="form-control" />
        </div>
    }
</div>

@code {
    [Parameter]
    public int Index { get; set; }
    private string Error { get; set; } = "";
    private Engine.Rule? ERule;
    private bool DeleteIntent = false;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (Index < Engine.Matcher.Rules.Count && Index >= 0) ERule = Engine.Matcher.Rules[Index];
    }
    private async void InvokeDelete()
    {
        if (DeleteIntent == true)
        {
            Delete();
            return;
        }
        DeleteIntent = true;
        await Task.Delay(2000);
        DeleteIntent = false;
        StateHasChanged();
    }
    private void Delete()
    {
        NavigationManager.NavigateTo("/Rules");
    }
}