@page "/Rules"
@using System.Reflection
@using global::Tikhole.Engine

<PageTitle>📃 Rules</PageTitle>

@if (Error != "")
{
    <div class="toast show position-fixed bottom-0 end-0 m-3">
        <div class="toast-header">
            <strong class="me-auto">⚠️ Error</strong>
        </div>
        <div class="toast-body">
            @Error
        </div>
    </div>
}

<h1>📃 Rules</h1>
<p class="text-secondary">
    <small>A list of rules that Tikhole uses to identify domains to send to RouterOS IP lists.</small>
</p>
<hr />
<a href="/Rules/-1" class="btn btn-dark">➕ Add</a>
<hr />
@{
    int index = 0; 
}
@foreach (Engine.Rule rule in Engine.Matcher.Rules) {
    RuleAttribute? ra = rule.GetType().GetCustomAttribute<RuleAttribute>();
    if (ra == null) continue;
    <div class="input-group mb-3 flex-row">
        <span class="input-group-text"><strong>Name</strong></span>
        <span class="input-group-text">@rule.Name</span>
        <span class="input-group-text"><strong>Type</strong></span>
        <span class="input-group-text flex-grow-1">@ra.Name</span>
        <button class="btn btn-outline-secondary" @onclick="() => {}">⬆️</button>
        <button class="btn btn-outline-secondary" @onclick="() => {}">⬇️</button>
        <a href="/Rules/@index" class="btn btn-outline-secondary">✏️</a>
    </div>
    index++;
}

@code {
    private string Error { get; set; } = "";
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
}